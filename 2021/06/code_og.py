# Advent of code Year 2021 Day 6 solution
# Author = brauni
# Date = 2021-12-06
"https://adventofcode.com/2021/day/6"

import copy
import os
from collections import Counter
import re


solution_1, solution_2 = 0, 0

# with open(os.getcwd() + "\\2021\\06\\example.txt", 'r') as f:
with open(os.getcwd() + "\\2021\\06\\input.txt", 'r') as f:
    input = f.read().strip().replace('\n', ',')
    # input = input.split("\n")
    # input = []
    # for line in f.readlines():
    # input.append(int(line))
    # input = [int(line) for line in f.readlines()]
    # input = [line for line in f.readlines()]

# PART 0
input = [int(x) for x in re.split(' -> |,', input)]

"""
print(input)
"""

# PART 1
to_be_added = []
swarm = copy.deepcopy(input)
for i in range(80):
    # print(i)
    to_be_added = []
    for j in range(len(swarm)):
        if swarm[j] == 0:
            to_be_added.append(j)
            swarm[j] = 7
        if swarm[j] != 0:
            swarm[j] -= 1
    for add in to_be_added:
        swarm.append(8)
    # print(swarm)
solution_1 = len(swarm)

# PART 2


# hard code for new 8s, thanks wolfram alpha
eights = [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 4, 4, 4, 4, 4, 5, 5, 7, 7, 8, 8, 8, 9, 9, 12, 12, 15, 15, 16, 17, 17, 21, 21, 27, 27, 31, 32, 33, 38, 38, 48, 48, 58, 59, 64, 70, 71, 86, 86, 106, 107, 122, 129, 135, 156, 157, 192, 193, 228, 236, 257, 285, 292, 348, 350, 420, 429, 485, 521, 549, 633, 642, 768, 779, 905, 950, 1034, 1154, 1191, 1401, 1421, 1673, 1729, 1939, 2104, 2225, 2555, 2612, 3074, 3150, 3612, 3833, 4164, 4659, 4837, 5629, 5762, 6686, 6983, 7776, 8492, 9001, 10288, 10599, 12315, 12745, 14462, 15475, 16777, 18780, 19600, 22603, 23344, 26777, 28220, 31239, 34255, 36377, 41383, 42944, 49380, 51564, 58016, 62475, 67616, 75638, 79321, 90763, 94508, 107396, 114039, 125632, 138113, 146937, 166401, 173829, 198159, 208547, 233028, 252152, 272569, 304514, 320766, 364560, 382376, 431187, 460699, 505597, 556666, 593335, 669074, 703142, 795747, 843075, 936784, 1017365, 1098932, 1225740, 1296477, 1464821, 1546217, 1732531, 1860440, 2035716, 2243105, 2395409, 2690561, 2842694, 3197352, 3406657, 3768247, 4103545, 4431125, 4933666, 5238103, 5887913, 6249351, 6965599, 7510202, 8199372, 9037211, 9669228, 10821579, 11487454, 12853512, 13759553, 15164971, 16547413, 17868600, 19858790, 21156682, 23675091, 25247007, 28018483, 30306966, 33033571, 36406203, 39025282, 43533881, 46403689, 51693574, 55553973, 61052054, 66713169, 72058853, 79940084, 85428971, 95227455, 101957662, 112745628, 122267142, 133110907,
          146653253, 157487824, 175167539, 187386633, 207973083, 224224804, 245856535, 268920395, 290598731, 321820792, 344874457, 383140622, 411611437, 453829618, 493145199, 536455266, 590741187, 635473188, 704961414, 756485894, 836970240, 904756636, 990284884, 1083886386, 1171928454, 1295702601, 1391959082, 1541931654, 1661242530, 1827255124, 1988643022, 2162213338, 2379588987, 2563887536, 2837634255, 3053201612, 3369186778, 3649885552, 3989468462, 4368232009, 4726100874, 5217223242, 5617089148, 6206821033, 6703087164, 7358655240, 8018117561, 8715569336, 9585455251, 10343190022, 11424044275, 12320176312, 13565476273, 14721204725, 16074224576, 17603572812, 19058759358, 21009499526, 22663366334, 24989520548, 27041381037, 29639700849, 32324777537, 35132983934, 38613072338, 41722125692, 45999020074, 49704747371, 54629221397, 59366158574, 64772684783, 70937849875, 76855109626, 84612092412, 91426873063, 100628241471, 109070905945, 119401906180, 130304008449, 141627794409, 155549942287, 168281982689, 185240333883, 200497779008, 220030147651, 239374914394, 261029700589, 285853950736, 309909777098, 340790276170, 368779761697, 405270481534, 439872693402, 481059848240, 525228865130, 570939477687, 626644226906, 678689538795, 746060757704, 808652455099, 886330329774, 965101558532, 1051999325927, 1151873092036, 1249629016482, 1372704984610, 1487341993894, 1632391087478, 1773754013631, 1938329655701, 2116974650568, 2301628342409]

# swarm_p2 = copy.deepcopy(input)
swarm_p2 = copy.deepcopy(input)
to_be_added = []
temp = 0
t = 256
for i in range(t):
    # print(i)
    to_be_added = 0
    for j in range(len(swarm_p2)):
        if swarm_p2[j] == 0:
            to_be_added += 1
            swarm_p2[j] = 7
        if swarm_p2[j] != 0:
            swarm_p2[j] -= 1
    for add in range(to_be_added):
        temp += eights[t - i - 1]
    # print(swarm)

solution_2 += len(swarm_p2) + temp


# SOLUTIONS

print("Part One : " + str(solution_1) + "\nPart Two : " + str(solution_2))
